import logging
import telebot
from telebot import types

API_TOKEN = 'NODZ5srU'

logging.basicConfig(level=logging.INFO)

bot = telebot.TeleBot(API_TOKEN)

rules_dict = {
    "–ü1": "üåü –õ—é–±—ã–µ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è –∏ –ø—Ä–æ–≤–æ–∫–∞—Ü–∏–∏ –∑–∞–ø—Ä–µ—â–µ–Ω—ã [–º—É—Ç 60-180+–≤–∞—Ä–Ω]",
    "–ü2": "üö´ –°–ø–∞–º/—Ñ–ª—É–¥ [–º—É—Ç 60-120+–≤–∞—Ä–Ω]. –û–±—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º/—É–∫—Ä–∞–∏–Ω—Å–∫–æ–º/–∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–∞—Ö.",
    "–ü3": "‚õî –û—Å–∫–æ—Ä–±–ª–µ–Ω–∏–µ —Ä–æ–¥–∏—Ç–µ–ª–µ–π [–±–∞–Ωüòê]",
    "–ü4": "‚öôÔ∏è –ö–æ–ø–∞–Ω–∏–µ, –æ—Ç–∫—Ä—ã–≤–∞–Ω–∏–µ –∫–µ–π—Å–æ–≤ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–µ–ª–∏–π –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –±–æ—Ç–∞ [–º—É—Ç 30]",
    "–ü5": "üîû –õ—é–±–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç 18+ –≤ –ª—é–±–æ–º –≤–∏–¥–µ [–º—É—Ç 120-180+–≤–∞—Ä–Ω]. –ó–æ–æ—Ñ–∏–ª–∏—è –∏ —Ç.–¥. —Ç–∞–∫–∂–µ –∑–∞–ø—Ä–µ—â–µ–Ω—ã, –∫–∞–∫ –≤ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö, —Ç–∞–∫ –∏ –≤ –≥–∏—Ñ–∫–∞—Ö –∏ —Å—Ç–∏–∫–µ—Ä–∞—Ö.",
    "–ü6": "üì£ –ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –¥–∏—Å–∫—É—Å—Å–∏–∏, —Å—Å–æ—Ä—ã –∏ —Ä–∞–∑–Ω–æ–≥–ª–∞—Å–∏—è —Ä–µ—à–∞—é—Ç—Å—è –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö [–º—É—Ç 60-120+–≤–∞—Ä–Ω]",
    "–ü7": "üïó –°–∫—Ä–∏–º–∞–∫–∏ –∑–∞–ø—Ä–µ—â–µ–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ—Å–ª–µ 20:00 –ø–æ –º—Å–∫ [–º—É—Ç 60]",
    "–ü8": "üìõ –†–µ–∫–ª–∞–º–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–∞. –ß—Ç–æ–±—ã –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ –≤–∏–¥–µ–æ –∏ —Ç.–¥., —Å–ø—Ä–æ—Å–∏—Ç–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ —É –∞–¥–º–∏–Ω–æ–≤ [–º—É—Ç 60-180+–≤–∞—Ä–Ω]",
    "–ü9": "üö´ –†–∞—Å–∫—Ä—ã—Ç–∏–µ —Å—Å—ã–ª–æ–∫ –Ω–∞ —á–∞—Ç –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–ª–∞–Ω–µ [–±–∞–Ω‚ò†Ô∏è]",
    "–ü10": "üõë –ó–∞–ø—Ä–µ—â–µ–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —á—Ç–æ-—Ç–æ, –∏–∑-–∑–∞ —á–µ–≥–æ –≤—ã–ª–µ—Ç–∞–µ—Ç —Ç–≥ –∏–ª–∏ –≤–∑–ª–æ–º [–º—É—Ç 60+–≤–∞—Ä–Ω-–±–∞–Ωüë©‚Äçüíª]",
    "–ü12": "üö∑ –ù–µ —Ä–∞–∑–º–µ—â–∞–π—Ç–µ –≤ –≥—Ä—É–ø–ø–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –≤–∏–¥–µ–æ –∏–ª–∏ –¥—Ä—É–≥–∏–µ –¥–∞–Ω–Ω—ã–µ –¥—Ä—É–≥–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –±–µ–∑ –µ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è [–º—É—Ç 60-–±–∞–Ωü´§]",
    "–ü17": "(–ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç [1-60 –º–∏–Ω—É—Ç (–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º - 30)])"
}

@bot.message_handler(regexp=r'^–ü—Ä–∞–≤–∏–ª–æ \d+$')
def send_rule_by_number(message):
    rule_number = message.text.split()[1]
    rule_key = f"–ü{rule_number}"
    if rule_key in rules_dict:
        rule_text = rules_dict[rule_key]
        bot.reply_to(message, rule_text, parse_mode='Markdown')
    else:
        bot.reply_to(message, "–¢–∞–∫–æ–≥–æ –ø—Ä–∞–≤–∏–ª–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")

@bot.message_handler(regexp=r'^–ü\d+$')
def send_rule_by_number(message):
    rule_number = message.text[1:]
    rule_key = f"–ü{rule_number}"
    if rule_key in rules_dict:
        rule_text = rules_dict[rule_key]
        bot.reply_to(message, rule_text, parse_mode='Markdown')
    else:
        bot.reply_to(message, "–¢–∞–∫–æ–≥–æ –ø—Ä–∞–≤–∏–ª–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")

@bot.message_handler(regexp=r'^–ü—Ä–∞–≤–∏–ª–∞$')
def send_all_rules(message):
    rules_text = "–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–∞–≤–∏–ª:\n\n" + "\n\n".join([f"{key}: {value}" for key, value in rules_dict.items()])
    bot.reply_to(message, rules_text, parse_mode='Markdown')

if __name__ == '__main__':
    bot.polling(none_stop=True)
